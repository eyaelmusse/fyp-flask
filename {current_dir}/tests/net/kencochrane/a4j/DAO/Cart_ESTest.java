/*
 * This file was automatically generated by EvoSuite
 * Mon Aug 28 01:46:41 GMT 2023
 */

package net.kencochrane.a4j.DAO;

import org.junit.Test;
import static org.junit.Assert.*;
import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.beans.ShoppingCart;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Cart_ESTest extends Cart_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Cart cart0 = new Cart();
      ShoppingCart shoppingCart0 = cart0.GetItemsFromCart("0", "0");
      assertNull(shoppingCart0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Cart cart0 = new Cart();
      ShoppingCart shoppingCart0 = cart0.modifyCart("!c", "3A2OW]jF&S.LnS_EP", "3A2OW]jF&S.LnS_EP", "0");
      assertNull(shoppingCart0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Cart cart0 = new Cart();
      ShoppingCart shoppingCart0 = cart0.modifyCart("hoppin{Ca^t=remove&=xml&dev-t=", "hoppin{Ca^t=remove&=xml&dev-t=", "hoppin{Ca^t=remove&=xml&dev-t=", "hoppin{Ca^t=remove&=xml&dev-t=");
      assertNull(shoppingCart0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Cart cart0 = new Cart();
      ShoppingCart shoppingCart0 = cart0.clearCart(":5<\"ekDM\n'(G", ":5<\"ekDM\n'(G");
      assertNull(shoppingCart0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Cart cart0 = new Cart();
      ShoppingCart shoppingCart0 = cart0.addToExistingCart("0xru", "0xru", "0xru", "0xru");
      assertNull(shoppingCart0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Cart cart0 = new Cart();
      ShoppingCart shoppingCart0 = cart0.AddtoCart("0xru", "0xru");
      assertNull(shoppingCart0);
  }
}
